<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--  This is the file that defines the actual layout and type of the commands.
        It is divided in different sections (e.g. command definition, command
        placement, ...), with each defining a specific set of properties.
        See the comment before each section for more details about how to
        use it. -->

  <!--  The VSCT compiler (the tool that translates this file into the binary 
        format that VisualStudio will consume) has the ability to run a preprocessor 
        on the vsct file; this preprocessor is (usually) the C++ preprocessor, so 
        it is possible to define includes and macros with the same syntax used 
        in C++ files. Using this ability of the compiler here, we include some files 
        defining some of the constants that we will use inside the file. -->

  <!--This is the file that defines the IDs for all the commands exposed by VisualStudio. -->
  <Extern href="stdidcmd.h"/>

  <!--This header contains the command ids for the menus provided by the shell. -->
  <Extern href="vsshlids.h"/>


  <!--Defines VK_INSERT -->
  <Extern href="virtkeys.h"/>



  <!--Definition of the IDs of the commands and VSCT elements specific for this sample. -->
  <Extern href="CommandIds.h"/>

  <!--Definition of the IDs of the resources used by this package;
    Here it is used to include the bitmap with the images used for the commands. -->
  <Extern href="Resource.h"/>

  <!--This is the file with the definition of the Guid specific for this sample.-->
  <Extern href="..\TangramPackage\Guids.h"/>


  <!--The Commands section is where we the commands, menus and menu groups are defined.
      This section uses a Guid to identify the package that provides the command defined inside it. -->
  <Commands package="guidTangramPackagePkg">
    <!-- Inside this section we have different sub-sections: one for the menus, another  
    for the menu groups, one for the buttons (the actual commands), one for the combos 
    and the last one for the bitmaps used. Each element is identified by a command id that  
    is a unique pair of guid and numeric identifier; the guid part of the identifier is usually  
    called "command set" and is used to group different command inside a logically related  
    group; your package should define its own command set in order to avoid collisions  
    with command ids defined by other packages. -->


    <!--This is the sub-section that defines the menus and toolbars.-->
    <Menus>
      <!--  To define an element in this group you need an ID, a parent group, a display priority,
            a menu type, a name and a default text. -->
      <!-- Editor Toolbar -->
      <Menu guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF" priority="0x0000" type="Toolbar">
        <Parent guid="guidTangramPackageCmdSet" id="0"/>
        <Strings>
          <ButtonText>TangramPackage Toolbar</ButtonText>
        </Strings>
      </Menu>
      <!-- Editor Context Menu -->
      <Menu guid="guidTangramPackageCmdSet" id="IDMX_RTF" priority="0x0000" type="Context">
        <Parent guid="guidTangramPackageCmdSet" id="0"/>
        <Strings>
          <ButtonText>TangramPackage Context Menu</ButtonText>
        </Strings>
      </Menu>
    </Menus>

    <!-- In this section you can define new menu groups. A menu group is a container for 
         other menus or buttons (commands); from a visual point of view you can see the 
         group as the part of a menu contained between two lines. The parent of a group 
         must be a menu. -->
    <Groups>

      <Group guid="guidTangramPackageCmdSet" id="MyMenuGroup" priority="0x0600">
        <Parent guid="guidSHLMainMenu" id="IDM_VS_MENU_TOOLS"/>
      </Group>



      <!--Editor menu group -->
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_EDITOR_CMDS" priority="0xFE00">
        <Parent guid="guidSHLMainMenu" id="IDM_VS_MENU_EDIT"/>
      </Group>

      <!-- Toolbar groups -->
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1" priority="0x0100">
        <Parent guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF"/>
      </Group>
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT2" priority="0x0200">
        <Parent guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF"/>
      </Group>
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_INDENT" priority="0x0300">
        <Parent guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF"/>
      </Group>
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_BULLET" priority="0x0400">
        <Parent guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF"/>
      </Group>
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT_COMBOS" priority="0x0040">
        <Parent guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF"/>
      </Group>

      <!--Context menu groups -->
      <Group guid="guidSHLMainMenu" id="IDG_VS_EDIT_CUTCOPY" priority="0x0100">
        <Parent guid="guidTangramPackageCmdSet" id="IDMX_RTF"/>
      </Group>
      <Group guid="guidTangramPackageCmdSet" id="IDG_RTF_CTX_PROPS" priority="0x0200">
        <Parent guid="guidTangramPackageCmdSet" id="IDMX_RTF"/>
      </Group>
      <Group guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE" priority="0x0300">
        <Parent guid="guidTangramPackageCmdSet" id="IDMX_RTF"/>
      </Group>

    </Groups>

    <!--Buttons section. -->
    <!--This section defines the elements the user can interact with, like a menu command or a button 
        or combo box in a toolbar. -->
    <Buttons>
      <!--To define a menu group you have to specify its ID, the parent menu and its display priority. 
          The command is visible and enabled by default. If you need to change the visibility, status, etc, you can use
          the CommandFlag node.
          You can add more than one CommandFlag node e.g.:
              <CommandFlag>DefaultInvisible</CommandFlag>
              <CommandFlag>DynamicVisibility</CommandFlag>
          If you do not want an image next to your command, remove the Icon node /> -->

      <Button guid="guidTangramPackageCmdSet" id="cmdidTangramCmd" priority="0x0100" type="Button">
        <Parent guid="guidTangramPackageCmdSet" id="MyMenuGroup" />
        <Icon guid="guidImages" id="bmpPic1" />
        <Strings>
          <ButtonText>Tangram</ButtonText>
        </Strings>
      </Button>


      <Button guid="guidTangramPackageCmdSet" id="cmdidTangramTool" priority="0x0100" type="Button">
        <Parent guid="guidSHLMainMenu" id="IDG_VS_WNDO_OTRWNDWS1"/>
        <Icon guid="guidImages" id="bmpPic2" />
        <Strings>
          <ButtonText>Universal Tool Window</ButtonText>
        </Strings>
      </Button>


      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithWinForm" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>&amp;Preview with .NET Form</ButtonText>
          <ToolTipText>Preview this Document with  a .NET Form</ToolTipText>
        </Strings>
      </Button>

      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithMDIWinForm" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>Pre&amp;view with .NET MDI Form</ButtonText>
          <ToolTipText>Preview this Document with  a .NET MDI Form</ToolTipText>
        </Strings>
      </Button>

      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithMFCFrame" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>Preview with &amp;MFC Frame Window</ButtonText>
          <ToolTipText>Preview this Document with  a MFC Frame Window</ToolTipText>
        </Strings>
      </Button>

      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithMFCMDIFrame" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>Preview with a MFC MDI &amp;FrameWnd</ButtonText>
          <ToolTipText>Preview this Document with  a MFC MDIFrameWnd</ToolTipText>
        </Strings>
      </Button>

      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithMSWORD" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>Preview with Microsoft Wor&amp;d</ButtonText>
          <ToolTipText>Preview this Document with  Microsoft Word</ToolTipText>
        </Strings>
      </Button>

      <Button guid="guidTangramPackageCmdSet" id="commandIDShowWithMSEXCEL" priority="0x0400" type="Button">
        <Parent guid="guidSharedMenuGroup" id="IDG_VS_FORMAT_FONTFACE"/>
        <Icon guid="guidImages" id="bmpPicStrikethrough"/>
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DefaultDisabled</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>
        <Strings>
          <ButtonText>Preview with Microsoft &amp;Excel</ButtonText>
          <ToolTipText>Preview this Document with  Microsoft Excel</ToolTipText>
        </Strings>
      </Button>
    </Buttons>

    <!--The bitmaps section is used to define the bitmaps that are used for the commands.-->
    <Bitmaps>
      <!--  The bitmap id is defined in a way that is a little bit different from the others: 
            the declaration starts with a guid for the bitmap strip, then there is the resource id of the 
            bitmap strip containing the bitmaps and then there are the numeric ids of the elements used 
            inside a button definition. An important aspect of this declaration is that the element id 
            must be the actual index (1-based) of the bitmap inside the bitmap strip. -->

      <Bitmap guid="guidImages" href="Images.png" usedList="bmpPic1, bmpPic2, bmpPicSearch, bmpPicX, bmpPicArrows"/>
    </Bitmaps>

  </Commands>


  <!--  Within this section you can specify the set of commands defined somewhere else that your  
        packages uses; for instance if your package uses the standard 'Copy' command, you don't  
        need to define it, because it is defined by the shell, but you have to use this section  
        of the VSCT file to notify the shell that your package uses it using this section. -->
  <!--  Note that with combo boxes we have effectively two commands in one. Below 
        we have two pairs of commands; 1st pair commandIDFontName and commandIDFontNameHandler, 
        2nd pair commandIDFontSize and commandIDFontSizeHandler. Note that: 
        
        - commandIDFontName and commandIDFontSize handle the displaying and setting of the font 
          name and font size respectively 
        - commandIDFontNameHandler and commandIDFontSizeHandler fill the drop down menus 
          with the available font names and font sizes respectively 
     -->
  <!-- Note also that VS will call QueryStatus only on commandIDFontName and  
       commandIDFontSize, but not on cmdFontNameHandler and commandIDFontSizeHandler whereas 
       Exec will be called on all four commands. 
       Note also that Exec will be called for commandIDFontName and commandIDFontSize for 
       two cases; first to get the current font name or size and second to 
       set the font name or size whereas the Exec call for commandIDFontNameHandler and  
       commandIDFontSizeHandler always have the same meaning - fill the drop down menu. 
       Finally, note that placement for the combo boxes is defined in the combo 
       section below by the priority and not in the CommandPlacements section. -->
  <UsedCommands>
    <UsedCommand guid="guidVSStd97" id="cmdidFontName"/>
    <UsedCommand guid="guidVSStd97" id="cmdidFontSize"/>
    <UsedCommand guid="guidVSStd97" id="cmdidCut"/>
    <UsedCommand guid="guidVSStd97" id="cmdidCopy"/>
    <UsedCommand guid="guidVSStd97" id="cmdidPaste"/>
    <UsedCommand guid="guidVSStd97" id="cmdidDelete"/>
  </UsedCommands>

  <!--Inside this section, we have the ability to place menu groups inside some other menu or 
      menu / commands inside other groups. 
      For instance, it is possible to place one of VisualStudio's menus or commands inside one of our  
      groups or one of our groups inside a menu defined somewhere else. -->
  <CommandPlacements>
    <!--Editor Toolbar -->
    <CommandPlacement guid="guidVSStd97" id="cmdidFontName" priority="0x0100">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT_COMBOS"/>
    </CommandPlacement>
    <CommandPlacement guid="guidVSStd97" id="cmdidFontSize" priority="0x0200">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT_COMBOS"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithWinForm" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithMDIWinForm" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithMFCFrame" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithMFCMDIFrame" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithMSWORD" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
    <CommandPlacement guid="guidTangramPackageCmdSet" id="commandIDShowWithMSEXCEL" priority="0x0400">
      <Parent guid="guidTangramPackageCmdSet" id="IDG_RTF_TLB_FONT1"/>
    </CommandPlacement>
  </CommandPlacements>



  <!-- This section is where you can associate a command with a keyboard shortcut; this association is
      valid within a specific UI context, that is when the shell is inside a specific mode, e.g. during
      debugging, editing a file or when the user is using a specific designer. -->
  <VisibilityConstraints>
    <VisibilityItem guid="guidTangramPackageCmdSet" id="IDM_TLB_RTF" context="guidTangramPackageEditorDocument"/>

  </VisibilityConstraints>

  <KeyBindings>
    <!--Keybindings 
       To define a binding, you have to specify the sequence of keys to press to activate the command  
       (keystate); 
       
       Notice that Visual Studio has a lot of components and commands, so it can be difficult to find a  
       key binding not used by somebody else; if the key bindings are conflicting only one will be used 
       and one problem is that the shell will not inform the user that a conflict was found. The only  
       way to detect the problem is to start Visual Studio under debugger, try to execute any command  
       and look if there is a message in the output window about a duplicated accelerator found.-->
  </KeyBindings>
</CommandTable>
